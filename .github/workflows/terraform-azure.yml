#This is a basic workflow to help you get started with Actions
name: 'Terraform-Azure'

# Controls when the workflow will run
on:
  # Triggers the workflow on push request events but only for the "main" branch
  push:
    branches: [ "main" ]
env: 
      ARM_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID}}
      ARM_CLIENT_SECRET: ${{secrets.AZURE_CLIENT_SECRET}}
      ARM_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
      ARM_TENANT_ID: ${{secrets.AZURE_TENANT_ID}}
jobs:
  terraform_plan:
    name: 'terraform plan'
    runs-on: ubuntu-latest
    environment: production
    
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        
    steps:
    - name: Checkout
      uses: actions/checkout@v3.5.2
      
    - name: Setup terraform
      uses: hashicorp/setup-terraform@v2.0.3
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
        
    - name: Terraform init
      run: terraform init
      
    - name: Terraform format
      run: terraform fmt
    
    - name: Terraform validate
      run: terraform validate
      
    - name: Terraform plan
      run: terraform plan
      
  terraform_apply:
      name: 'terraform apply'
      needs: [terraform_plan]
      runs-on: ubuntu-latest
      environment: production

      defaults:
        run:
          shell: bash

      steps:
      - name: Checkout
        uses: actions/checkout@v3.5.2

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform init
        run: terraform init

      - name: Terraform apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve
